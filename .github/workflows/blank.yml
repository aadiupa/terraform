# This is a basic workflow to help you get started with Actions

name: baproject

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
          inputs:
            stage:
              description: 'stage [local,dev,prod]'
              required: true
              default: 'local'
              type: choice
              options: 
                - local
                - dev
                - prod
            jobs:
              description: 'give the job name'
              required: true
              type: choice
              options:
                - account
                - alignx
                - authorization

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: |
          cd ./ba/${{ github.event.inputs.jobs }}/infra
          terraform init -backend-config="bucket=${{ secrets.STATE_BUCKET_NAME }}" \
             -backend-config="key=s3backend/${{ github.event.inputs.stage }}/terraform.tfstate" \
             -backend-config="region=${{ secrets.AWS_REGION }}" \
             -backend-config="dynamodb_table=${{ secrets.DYNAMODB_TABLE }}" \
             -input=false -no-color

      # Validate the terraform configuration.
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: |
          cd ./ba/${{ github.event.inputs.jobs }}/infra
          terraform plan -var="environment=${{ github.event.inputs.stage }}" -no-color -out=planfile
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        run: |
          cd ./services/${GITHUB_WORKFLOW}/infra 
          terraform apply "planfile" -auto-approve
